@model App.Web.Core.Models.Targeting.TargetingViewModel

@{
    ViewData["Title"] = "Feature Toggles";
    Layout = "~/Views/Shared/_layoutAdmin.cshtml";
}

<div class="admin-container">
    <div class="row">
        <div class="col-sm-2">
            @Html.Partial("_applicationNavigation", ViewData["ApplicationId"], new ViewDataDictionary(ViewData) { { "selected", "targeting" } })
        </div>
        <div class="col-sm">
            <h2 class="admin-heading d-flex justify-content-between align-items-center text-muted">
                <span>Targeting</span>
                <div class="btn-group mg-r" role="group">
                    <button id="btnGroupDropTarget" type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        New target rule
                    </button>
                    <div class="dropdown-menu" aria-labelledby="btnGroupDropTarget" style="font-size:12px">
                        <a class="dropdown-item" href="#" data-toggle="modal" data-backdrop="true" data-target="#createNewTargetSpecificModal">Target specific users</a>
                        <a class="dropdown-item" href="#" data-toggle="modal" data-backdrop="true" data-target="#createNewTargetPercentModal">Target % of users</a>
                    </div>
                </div>
            </h2>

            <div class="dropdown" style="margin: 20px 0">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Model.SelectedEnvironment.Name
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    @foreach (var env in Model.Environments.OrderBy(x => x.Name))
                    {
                        <a class="dropdown-item" asp-action="view" asp-controller="targeting" asp-route-applicationId="@env.ApplicationId" asp-route-environmentId="@env.Id">@env.Name</a>
                    }
                </div>
            </div>

            <ul class="list-group">
                <li class="list-group-item">
                    <div class="row">
                        <div class="col-4">
                            <strong>Feature</strong>
                        </div>
                        <div class="col-5">
                            <strong>Target</strong>
                        </div>
                        <div class="col-2">
                            <strong>Status</strong>
                        </div>

                    </div>
                </li>
                @foreach (var target in Model.UserTargetings)
                {
                    <li class="list-group-item list-group-item-action">
                        <div class="row">
                            <div class="col-4">
                                <strong>@target.FeatureToggle.Key</strong>
                            </div>
                            <div class="col-5">
                                @if (target.TargetRule is App.Domain.TargetSpecificUsers)
                                {
                                    <span data-toggle="tooltip" data-placement="bottom" title="@((target.TargetRule as App.Domain.TargetSpecificUsers).ValuesList)">@target.TargetRule.ToString()</span>
                                }
                                else
                                {
                                    <span>@target.TargetRule.ToString()</span>
                                }
                            </div>
                            <div class="col-2">
                                <div class="custom-control custom-switch">
                                    <input type="checkbox" name="t-@target.Id" class="custom-control-input" checked disabled>
                                    <label class="custom-control-label" for="t-@target.Id">Enabled</label>
                                </div>
                            </div>
                            <span class="list-actions">
                                <a onclick="deleteRule('@target.Id')" href="#" title="Delete"><span class="oi delete" data-glyph="trash"></span></a>
                                @if (target.TargetRule.Name == "percentage")
                                {
                                    <a onclick="editPercentageRule('@target.Id', @((target.TargetRule as App.Domain.TargetPercentage).Percent.Number))" href="#" title="Delete"><span class="oi pencil" data-glyph="pencil"></span></a>
                                }
                                else
                                {
                                    <a onclick="editListRule('@target.Id', '@((int)(target.TargetRule as App.Domain.TargetSpecificUsers).Option)', '@((target.TargetRule as App.Domain.TargetSpecificUsers).Property)', '@((target.TargetRule as App.Domain.TargetSpecificUsers).ValuesList.List)')" href="#" title="Delete"><span class="oi pencil" data-glyph="pencil"></span></a>
                                }
                            </span>
                        </div>
                    </li>
                }

            </ul>
        </div>
    </div>
</div>




<!--New target modal-->
@Html.Partial("_createNewUserTargetPercentModal", Model)
@Html.Partial("_createNewUserTargetSpecificModal", Model)

<!--Update target modal-->
@Html.Partial("_updateUserTargetPercentModal", Model)
@Html.Partial("_updateUserTargetSpecificModal", Model)

<!--Delete option-->
@Html.Partial("_confirmationModal", new ConfirmationModalModel { Controller = "targeting", Action = "delete", Title = "Are you sure you want to delete this target rule?", Body = "This target rule will be removed. This operation can't be undone", PositiveText = "Yes, I'm sure", RouteData = new Dictionary<string, string> { { "applicationId", ViewData["ApplicationId"].ToString() } } })


@section scripts{
    <script>
        function deleteRule(id) {
            $('#confirmationModal-input-id').val(id);
            $('#confirmationModal').modal('show');
        }

        function editPercentageRule(id, number) {
            $('#updateTargetPercentModal-input-id').val(id);
            $('#updateTargetPercentModal-input-number').val(number);
            $('#updateTargetPercentModal').modal('show');
        }

        function editListRule(id, option, property, list) {
            $('#updateTargetSpecificModal-input-id').val(id);
            $('#updateTargetSpecificModal-input-option-' + option).prop('checked', true);;
            $('#updateTargetSpecificModal-input-property').val(property);
            $('#updateTargetSpecificModal-input-list').val(list);
            $('#updateTargetSpecificModal').modal('show');
        }
    </script>
}